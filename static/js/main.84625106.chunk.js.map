{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alert.js","components/About.js","components/Foooter.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","style","color","Textbox","useState","text","setText","heading","value","onChange","event","target","rows","placeholder","backgroundColor","disabled","length","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","showalert","replace","split","filter","element","Alert","word","height","alert","role","slice","msg","About","Foooter","class","position","bottom","width","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84625106.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/about\">About Us</Link>\r\n              </li>\r\n            </ul>\r\n            </div>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.toggleMode}/>\r\n                <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\"  style = {{color: props.mode==='light'?'black':'white'}}>Enable Dark Mode</label>\r\n            </div>\r\n            </div>\r\n      </nav>\r\n      )\r\n}\r\n\r\n      Navbar.propTypes = {\r\n        title : PropTypes.string\r\n};\r\n\r\n      Navbar.defaultProps = {\r\n        title: 'TextUtilis'\r\n  };","import React, {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    const handleUpClick = ()=>{\r\n       // console.log(\"clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handlecopyClick = ()=>{\r\n        // copyText.select();\r\n        // copyText.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(text);\r\n        props.showalert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText(\"\");\r\n    }\r\n\r\n\r\n    const handlespaceClick = ()=>{\r\n        setText(text.replace(/\\s+/g, \" \"));\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"handle On Change function\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className = \"container\">\r\n             <h2 style = {{color : props.mode==='light'?'black':'white'}}>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n           \r\n            <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\" placeholder=\"Enter Text Here\" style = {{backgroundColor : props.mode==='light'?'white':'#13466e', color: props.mode==='light'?'black':'white'}}></textarea>\r\n        </div>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handleUpClick}>Convert to UpperCase</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary mx-3 my-2\" onClick = {handleLowClick}>Convert to LowerCase</button>        \r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handlecopyClick}>Copy</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary mx-3 my-2\" onClick = {handleClearClick}>Clear</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handlespaceClick}>Remove Extra Spaces</button>        \r\n        \r\n        </div>\r\n        <div className=\"container\" style = {{color: props.mode==='light'?'black':'white'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} words and {text.length - text.split(/\\s/).length+1} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length !== 0}).length} minutes read</p>\r\n            <h2>Preview</h2>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let word1 = word.toLowerCase();\r\n        return word1[0].toUpperCase() + word.slice(1);\r\n    }\r\n    return (\r\n        <div style = {{height: '50px'}}>\r\n    { props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible`} role=\"alert\" id=\"liveAlert\">\r\n                <strong>{capitalize(props.alert.type)}! </strong>{props.alert.msg}.\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </div> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className = \"container\" style = {{color : props.mode==='light'?'black':'white'}}>\r\n            <h1>About TextUtils</h1>\r\n            <p>TextUtils is text utility, which helps you convert your text to UpperCase or LowerCase, remove exra spaces and many more to come!!!</p>\r\n            {/* <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Natus corporis voluptate voluptatem maiores unde expedita veritatis rerum necessitatibus, deleniti, veniam laudantium beatae commodi, blanditiis nesciunt similique nemo nostrum. Reiciendis dolor porro quam consequatur deleniti suscipit voluptas dolorum iste temporibus sit, delectus necessitatibus sequi, labore deserunt doloremque quis non eveniet ducimus.</p> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Foooter(props) {\r\n    return (\r\n        <div>\r\n          \r\n            <footer class={`page-footer font-small blue bg-dark`} style = {{color:'white', position:'fixed', bottom: '0', width: '100%'}}>\r\n\r\n              \r\n                <div class=\"footer-copyright text-center py-3\">© 2020 Copyright | Shubham Gupta\r\n                    {/* <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a> */}\r\n                </div>\r\n       \r\n\r\n            </footer>\r\n         \r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar.js'\nimport Textbox from './components/Textbox.js'\nimport Alert from './components/Alert.js'\nimport About from './components/About.js'\nimport Foooter from './components/Foooter.js'\n\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  \n    const showalert = (message, type)=>{\n      setAlert({\n        msg : message,\n        type : type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n    }\n\n    const toggleMode = ()=>{\n      if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0f203d\";\n      showalert(\"Dark Mode Enabled\", \"success\");\n      }\n      else{\n        setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"Light Mode Enabled\", \"success\");\n      }\n    }\n  return (\n    <>\n    <Router>\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      {/* <Textbox heading = \"Try TextUtils to convert text to UpperCase, LowerCase, remove extra spaces etc..\" mode = {mode} toggleMode = {toggleMode} showalert = {showalert}/>           */}\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About mode = {mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <Textbox heading = \"Try TextUtils to convert text to UpperCase, LowerCase, remove extra spaces etc..\" mode = {mode} toggleMode = {toggleMode} showalert = {showalert}/>          \n          </Route>\n        </Switch>\n      </div>\n      <Foooter mode = {mode} />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}