{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","style","color","placeholder","Textbox","useState","text","setText","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","newText","toUpperCase","toLowerCase","copyText","navigator","clipboard","writeText","showalert","replace","split","filter","element","Alert","word","height","alert","class","role","slice","msg","About","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d5e0f37.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n              </li>\r\n            </ul>\r\n            </div>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.toggleMode}/>\r\n                <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\"  style = {{color: props.mode==='light'?'black':'white'}}>Enable Dark Mode</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n            </div>\r\n      </nav>\r\n      )\r\n}\r\n\r\n      Navbar.propTypes = {\r\n        title : PropTypes.string\r\n};\r\n\r\n      Navbar.defaultProps = {\r\n        title: 'TextUtilis'\r\n  };","import React, {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // const[mystyle, setMystyle] = useState({\r\n    //     color : \"black\",\r\n    //     backgroundColor : \"white\"\r\n    // })\r\n\r\n    // const [btnText, setbtnText] = useState(\"Dark Mode\");\r\n\r\n    const handleUpClick = ()=>{\r\n       // console.log(\"clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handlecopyClick = ()=>{\r\n        var copyText = text;\r\n        // copyText.select();\r\n        // copyText.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copyText);\r\n        props.showalert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText(\"\");\r\n    }\r\n\r\n    // const handledarkClick = ()=>{\r\n\r\n    //     if(mystyle.backgroundColor === \"white\"){\r\n    //         setMystyle({\r\n    //             color : 'white',\r\n    //             backgroundColor : \"Black\"\r\n    //         })\r\n    //     }\r\n    //     else{\r\n    //         setMystyle({\r\n    //             color : 'black',\r\n    //             backgroundColor : \"white\"\r\n    //         })\r\n    //     }\r\n    //     if(btnText === \"Dark Mode\"){\r\n    //         setbtnText(\"Light Mode\");\r\n    //     }\r\n    //     else{\r\n    //         setbtnText(\"Dark Mode\");\r\n    //     }\r\n    // }\r\n\r\n    const handlespaceClick = ()=>{\r\n        setText(text.replace(/\\s+/g, \" \"));\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"handle On Change function\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className = \"container\">\r\n             <h1 style = {{color : props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            {/* <label htmlfor=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\" placeholder=\"Enter Text Here\" style = {{backgroundColor : props.mode==='light'?'white':'#13466e', color: props.mode==='light'?'black':'white'}}></textarea>\r\n        </div>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handleUpClick}>Convert to UpperCase</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary mx-3\" onClick = {handleLowClick}>Convert to LowerCase</button>        \r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handlecopyClick}>Copy</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary mx-3\" onClick = {handleClearClick}>Clear</button>\r\n        <button type=\"button\" disabled = {text.length === 0} className=\"btn btn-primary\" onClick = {handlespaceClick}>Remove Extra Spaces</button>        \r\n        \r\n        </div>\r\n        <div className=\"container\" style = {{color: props.mode==='light'?'black':'white'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length !== 0}).length} words and {text.length - text.split(\" \").length+1} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length !== 0}).length} minutes read</p>\r\n            <h2>Preview</h2>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let word1 = word.toLowerCase();\r\n        return word1[0].toUpperCase() + word.slice(1);\r\n    }\r\n    return (\r\n        <div style = {{height: '50px'}}>\r\n    { props.alert && <div>\r\n            <div class={`alert alert-${props.alert.type} alert-dismissible`} role=\"alert\" id=\"liveAlert\">\r\n                <strong>{capitalize(props.alert.type)}! </strong>{props.alert.msg}.\r\n                {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </div> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className = \"container\">\r\n            <h1>About TextUtils</h1>\r\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Natus corporis voluptate voluptatem maiores unde expedita veritatis rerum necessitatibus, deleniti, veniam laudantium beatae commodi, blanditiis nesciunt similique nemo nostrum. Reiciendis dolor porro quam consequatur deleniti suscipit voluptas dolorum iste temporibus sit, delectus necessitatibus sequi, labore deserunt doloremque quis non eveniet ducimus.</p>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar.js'\nimport Textbox from './components/Textbox.js'\nimport Alert from './components/Alert.js'\nimport About from './components/About.js'\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  \n    const showalert = (message, type)=>{\n      setAlert({\n        msg : message,\n        type : type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n    }\n\n    const toggleMode = ()=>{\n      if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0f203d\";\n      showalert(\"Dark Mode Enabled\", \"success\");\n      }\n      else{\n        setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"Light Mode Enabled\", \"success\");\n      }\n    }\n  return (\n    <>\n    <Router>\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n          <Textbox heading = \"Enter Text to Analyze\" mode = {mode} toggleMode = {toggleMode} showalert = {showalert}/>          \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}